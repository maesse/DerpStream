/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package derpstream;

import java.awt.EventQueue;
import java.io.File;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Mads
 */
public class DerpStreamUI extends javax.swing.JFrame implements DerpStreamCallbacks {
    private static final Logger LOGGER = Logger.getLogger("derpstream");
    
    DerpStream streamBrain = null;
    
    private boolean first = true;
    int downloadedPieces = 0;
    int failedPieces = 0;
    int retryedPieces = 0;
    long bytesDownloaded = 0;
    String targetFile;
    
    /**
     * Creates new form DerpStreamUI
     */
    public DerpStreamUI() {
        initComponents();
        
        destFolderField.setText(Paths.get("").toAbsolutePath().toString());
        folderChooser.setCurrentDirectory(Paths.get("").toAbsolutePath().toFile());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        folderChooser = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        streamURLLabel = new javax.swing.JLabel();
        destFolderLabel = new javax.swing.JLabel();
        destFolderField = new javax.swing.JTextField();
        streamURLField = new javax.swing.JTextField();
        selectFolderButton = new javax.swing.JButton();
        streamToggle = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        maxRetriesField = new javax.swing.JTextField();
        commandField = new javax.swing.JTextField();
        runCommandButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pieceCountLabel = new javax.swing.JLabel();
        pieceTotalSizeLabel = new javax.swing.JLabel();
        pieceRetriesLabel = new javax.swing.JLabel();
        pieceFailedLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fileNameLabel = new javax.swing.JLabel();

        folderChooser.setCurrentDirectory(new java.io.File("C:\\Program Files\\NetBeans 7.1.1"));
        folderChooser.setDialogTitle("Select Destination Folder");
        folderChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Properties"));

        streamURLLabel.setText("Stream URL:");

        destFolderLabel.setText("Destination folder:");

        destFolderField.setText("N/A");

        streamURLField.setText("http://cds.x5p5f3b8.hwcdn.net/valve/smil:Dota_English.smil/");

        selectFolderButton.setText("Select Folder...");
        selectFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFolderButtonActionPerformed(evt);
            }
        });

        streamToggle.setText("Start Stream...");
        streamToggle.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        streamToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                streamToggleActionPerformed(evt);
            }
        });

        jLabel5.setText("Max Retries:");

        maxRetriesField.setText("5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(streamURLLabel)
                            .addComponent(destFolderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(32, 32, 32)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(maxRetriesField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(streamToggle, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(destFolderField, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectFolderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(streamURLField))
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(streamURLLabel)
                    .addComponent(streamURLField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destFolderLabel)
                    .addComponent(destFolderField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectFolderButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(streamToggle, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(maxRetriesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        commandField.setText("\"C:\\Program Files (x86)\\VideoLAN\\VLC\\vlc.exe\" \"{0}\"");

        runCommandButton.setText("Run Command");
        runCommandButton.setEnabled(false);
        runCommandButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runCommandButtonActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Stats"));

        jLabel1.setText("Pieces downloaded:");

        jLabel2.setText("Retries:");

        jLabel3.setText("Failed pieces:");

        pieceCountLabel.setText("N/A");

        pieceTotalSizeLabel.setText("N/A");

        pieceRetriesLabel.setText("N/A");

        pieceFailedLabel.setText("N/A");

        jLabel4.setText("Filename:");

        fileNameLabel.setText("N/A");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pieceRetriesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pieceTotalSizeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pieceFailedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pieceCountLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(pieceCountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pieceTotalSizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceRetriesLabel)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pieceFailedLabel)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(fileNameLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 666, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(commandField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(runCommandButton))
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commandField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runCommandButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFolderButtonActionPerformed
        // Open folder chooser
        int result = folderChooser.showSaveDialog(this);
        if(result == JFileChooser.APPROVE_OPTION) {
            destFolderField.setText(folderChooser.getSelectedFile().getPath());
            folderChooser.setCurrentDirectory(folderChooser.getSelectedFile());
        }
    }//GEN-LAST:event_selectFolderButtonActionPerformed

    private void streamToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_streamToggleActionPerformed
        String start = "Start Stream...";
        String stop = "Stop Stream";
        String cmd = evt.getActionCommand();
        if(cmd.equals(start)) {
            try {
                // Reset stats
                first = true;
                downloadedPieces = 0;
                failedPieces = 0;
                retryedPieces = 0;
                bytesDownloaded = 0;
                
                // Start the brain
                streamBrain = new DerpStream();
                streamBrain.setMaxRetries(maxRetriesField.getText());
                streamBrain.setCallbacks(this);
                
                // Select stream
                ArrayList<StreamInfo> streams = streamBrain.getStreamList();
                Object selected = JOptionPane.showInputDialog(this, 
                        "Available streams:", "Select Stream...", 
                        JOptionPane.QUESTION_MESSAGE, null, streams.toArray(), null);
                if((selected instanceof StreamInfo) == false) return;
                LOGGER.info("Selected: " + selected);
                
                // Kick it!
                StreamInfo stream = (StreamInfo)selected;
                streamBrain.runAndSave(stream, destFolderField.getText() + File.separator, false);
                
                streamToggle.setText(stop);
                
                destFolderField.setEnabled(false);
                selectFolderButton.setEnabled(false);
                streamURLField.setEnabled(false);
                maxRetriesField.setEnabled(false);
            } catch(IOException ex) {
                JOptionPane.showMessageDialog(this, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            destFolderField.setEnabled(true);
            selectFolderButton.setEnabled(true);
            streamURLField.setEnabled(true);
            maxRetriesField.setEnabled(true);
            
            // Stop the brain
            streamBrain.stopStreaming();
            streamToggle.setText(start);
        }
        
    }//GEN-LAST:event_streamToggleActionPerformed

    private void runCommandButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runCommandButtonActionPerformed
        String cmd = commandField.getText().replace("{0}", targetFile);
        try {
            Runtime.getRuntime().exec(cmd);
        } catch (IOException ex) {
            
            Logger.getLogger(DerpStreamUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_runCommandButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            LOGGER.setLevel(Level.ALL);
            FileHandler handler = new FileHandler("DerpStream.log");
            handler.setFormatter(new SimpleFormatter());
            LOGGER.addHandler(handler);
            
        } catch (IOException ex) {
            Logger.getLogger(DerpStreamUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SecurityException ex) {
            Logger.getLogger(DerpStreamUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DerpStreamUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DerpStreamUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DerpStreamUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DerpStreamUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DerpStreamUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField commandField;
    private javax.swing.JTextField destFolderField;
    private javax.swing.JLabel destFolderLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JFileChooser folderChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField maxRetriesField;
    private javax.swing.JLabel pieceCountLabel;
    private javax.swing.JLabel pieceFailedLabel;
    private javax.swing.JLabel pieceRetriesLabel;
    private javax.swing.JLabel pieceTotalSizeLabel;
    private javax.swing.JButton runCommandButton;
    private javax.swing.JButton selectFolderButton;
    private javax.swing.JToggleButton streamToggle;
    private javax.swing.JTextField streamURLField;
    private javax.swing.JLabel streamURLLabel;
    // End of variables declaration//GEN-END:variables

    //
    // DerpStreamCallbacks stuff
    //
    private Runnable wroteFirstPiece = new Runnable() {
        @Override
        public void run() {
            runCommandButton.setEnabled(true);
        }
    };
    
    private Runnable setFileNameLabel = new Runnable() {
        @Override
        public void run() {
            fileNameLabel.setText(targetFile);
        }
    };
    
    private Runnable updateStats = new Runnable() {
        @Override
        public void run() {
            pieceCountLabel.setText(""+downloadedPieces);
            pieceTotalSizeLabel.setText(String.format("%.2f MB", bytesDownloaded / (1024*1024f)));
            pieceFailedLabel.setText(""+failedPieces);
            pieceRetriesLabel.setText(""+retryedPieces);
        }
    };
    
    @Override
    public void startedDownload(int piece) {
        
    }

    @Override
    public void finishedDownload(int piece, int size) {
        bytesDownloaded += size;
        EventQueue.invokeLater(updateStats);
    }

    @Override
    public void retryingDownload(int piece) {
        retryedPieces++;
        EventQueue.invokeLater(updateStats);
    }

    @Override
    public void fileCreated(String path) {
        targetFile = path;
        EventQueue.invokeLater(setFileNameLabel);
    }

    @Override
    public void finishedWriting(int piece) {
        downloadedPieces++;
        EventQueue.invokeLater(updateStats);
        
        if(first) {
            first = false;
            EventQueue.invokeLater(wroteFirstPiece);
        }
    }

    @Override
    public void skippedWriting(int piece) {
        failedPieces++;
        EventQueue.invokeLater(updateStats);
    }

    @Override
    public void pieceAvailable(int piece) {
        
    }
}
